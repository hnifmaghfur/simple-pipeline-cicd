# name your workflow
name: go-builder-plate

# trigger your workflow
on:
    push:
        branches: master

jobs:
    # define job name
    build-and-deploy:
        # define environment where the job will run (ubuntu-latest)
        runs-on: ubuntu-latest

        # define steps
        steps:

            # Checkout code in the workflow's workspace so that it can be used by later steps (actions/checkout@v3) 
            - name: Checkout code
              uses: actions/checkout@v3

            # set up go (actions/setup-go@v4) to set up the Go environment
            - name: Set up Go
              uses: actions/setup-go@v4
              with:
                go-version: 1.22

            # set up docker buildx (docker/setup-buildx-action@v3) to create a new builder and use it to build and push the image
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # login to ghcr (docker/login-action@v3) to authenticate with the GitHub Container Registry
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GHCR_TOKEN }} # GitHub Container Registry token

            # build and push image (docker/build-push-action@v5) to push the image to the GitHub Container Registry
            - name: Build and Push Image
              uses: docker/build-push-action@v5
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: ghcr.io/${{ github.repository }}:latest

            # deploy to server (appleboy/ssh-action@v1.0.0) to deploy the image to the server
            - name: Deploy to server
              uses: appleboy/ssh-action@v1.0.0
              with:
                host: ${{ secrets.SSH_HOST }}
                username: ${{ secrets.SSH_USER }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                  docker stop ${{ github.event.repository.name }} || true
                  docker rm ${{ github.event.repository.name }} || true
                  echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                  docker pull ghcr.io/${{ github.repository }}:latest
                  docker run -d --name ${{ github.event.repository.name }} -p 3000:3000 ghcr.io/${{ github.repository }}:latest